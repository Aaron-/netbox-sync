### Welcome to the NetBox-Sync configuration file.

# The values in this file override the default values used by the system if
# a config option is not specified. The commented out lines are the configuration
# field and the default value used. Uncommenting a line and changing the value
# will change the value used at runtime when the process is restarted.

###
### [common]
###
### Controls the parameters for logging.
###

[common]

# Logs will always be printed to stdout/stderr.
# Logging can be set to following log levels
#   ERROR:      Fatal Errors which stops regular a run
#   WARNING:    Warning messages won't stop the syncing process but mostly worth
#               to have a look at.
#   INFO:       Informations about objects that will be create/updated/deleted in NetBox
#   DEBUG:      Will log information about retrieved information, changes in internal
#               data structure and parsed config
#   DEBUG2:     Will also log information about how/why data is parsed or skipped.
#   DEBUG3:     Logs all source and NetBox queries/results to stdout. Very useful for
#               troubleshooting, but will log any sensitive data contained within a query.
#
# log_level = INFO

# Enabling this options will write all logs to a log file defined in "log_file"
# log_to_file = False

# Destination of the log file if "log_to_file" is enabled.
# Log file will be rotated maximum 5 times once the log file reaches size of 10 MB
# log_file = log/netbox_sync.log


###
### [netbox]
###
### Controls the connection parameters to your netBox instance
###

[netbox]

# Requires an NetBox API token with full permissions on all objects except:
#   * auth
#   * secrets
#   * users
api_token = XYZ

# Requires a hostname or IP which points to your NetBox instance
host_fqdn = netbox.example.com

# Define the port your NetBox instance is listening on. If "disable_tls" is
# set to "true" this option might be set to 80
# port = 443

# Weather TLS encryption is enabled or disabled.
# disable_tls = false

# Enforces TLS certificate validation. If this system doesn't trust the NetBox
# web server certificate then this option needs to be changed
# validate_tls_certs = true

# Whether items which were created by this program but can't be found in any
# source anymore will be deleted or not.
# prune_enabled = true

# Orphaned objects will first be tagged before they get deleted. Once the amount
# of days passed the object will actually be deleted.
# prune_delay_in_days = 30

# The maximum number of objects returned in a single request. If a NetBox instance
# is very quick responding the value should be raised.
# default_netbox_result_limit = 200

# The maximum time a query is allowed to execute before being killed and considered failed.
# timeout = 30

# The amount of times a failed request will be reissued. Once the maximum is reached the
# syncing process will be stopped completely.
# max_retry_attempts = 4


###
### [sources/*]
###
### Controls the parameters of a defined source. The string past the slash
### will be used as a sources name. Sources can be defined multiple times to
### represent different sources. It is planned to support different types of sources.
### Currently supported
###   * vmware    : VMWare vcenter


[source/my-example]

#
# enabled = true

type = vmware

host_fqdn = vcenter.example.com

# port = 443
username = vcenteruser
password = supersecret

permitted_subnets = 172.16.0.0/12, 10.0.0.0/8, 192.168.0.0/16, fd00::/8

# filter are all treated as regex expressions
#host_exclude_filter =
#host_include_filter =

#vm_exclude_filter =
#vm_include_filter =

#cluster_include_filter =
#cluster_exclude_filter =

#netbox_host_device_role = Server
#netbox_vm_device_role = Server

# cluster is a regex expression, first hit matches
#cluster_site_relation = Cluser_NYC = New York, Cluster_FFM = Frankfurt

# cluster is a regex expression, first hit matches
#host_site_relation = Cluser_NYC = New York, Cluster_FFM = Frankfurt

# Attempt to collect asset tags from vCenter hosts
#collect_hardware_asset_tag = True

#dns_name_lookup = True

#custom_dns_servers = 192.168.1.11, 192.168.1.12

# define how the primary IPs should be set
# possible values
#   * always (will remove primary IP from object which has it currently set and moves it to new object)
#   * when-undefined (default) (only sets primary IP if undefined, will cause ERRORs if same IP is assigned more then once to different hosts and IP is set as the objects primary IP)
#   * never (don't set any primary IPs, will cause the same ERRORs as "when-undefined"

# set_primary_ip = when-undefined

# EOF
